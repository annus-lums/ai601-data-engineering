# -*- coding: utf-8 -*-
"""DataGenerationScript.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LQLbYGvBt7peOZj8VeHSMgzQA8H6rrSM
"""

import random
import csv
from datetime import datetime, timedelta

# Define possible actions, devices, and regions
actions = ["play", "pause", "skip", "forward"]
devices = ["mobile", "desktop", "tablet"]
regions = ["US", "EU", "APAC"]

# Define content metadata with 10 rows
content_metadata = [
    [1000, "Summer Vibes", "Pop", 180, "DJ Alpha"],
    [1001, "Rock Anthem", "Rock", 240, "The Beats"],
    [1002, "Podcast Ep 1", "Podcast", 600, "Talk Show"],
    [1003, "News Hour", "News", 900, "Daily News"],
    [1004, "Jazz Nights", "Jazz", 300, "Smooth Sound"],
    [1005, "Hip Hop Hype", "Hip Hop", 200, "MC Flow"],
    [1006, "Classical Moods", "Classical", 400, "Mozart Symphony"],
    [1007, "Reggae Waves", "Reggae", 320, "Bob Legend"],
    [1008, "EDM Party", "Electronic", 250, "DJ Neon"],
    [1009, "Indie Chill", "Indie", 270, "The Acoustic Souls"],
]

# Extract content IDs from metadata to ensure overlap
content_ids = [row[0] for row in content_metadata]

# Generate User Logs for 7 days
start_date = datetime(2023, 9, 1)
days = 7

for i in range(days):
    date = start_date + timedelta(days=i)
    filename = f"user_logs_{date.strftime('%Y-%m-%d')}.csv"

    with open(filename, "w", newline="") as file:
        writer = csv.writer(file)
        writer.writerow(["user_id", "content_id", "action", "timestamp", "device", "region", "session_id"])

        for _ in range(random.randint(20, 30)):  # Generate 20-30 rows per day
            random_time = timedelta(
                hours=random.randint(0, 23),
                minutes=random.randint(0, 59),
                seconds=random.randint(0, 59)
            )  # Generate random time

            timestamp = (date + random_time).strftime("%Y-%m-%d %H:%M:%S")  # Combine date & random time

            writer.writerow([
                random.randint(100, 200),  # user_id
                random.choice(content_ids),  # Ensure content_id is from metadata
                random.choice(actions),  # User action
                timestamp,  # Randomized Timestamp
                random.choice(devices),  # Device type
                random.choice(regions),  # User region
                f"S{random.randint(1000, 9999)}"  # Session ID
            ])

print("✅ User logs generated with random timestamps.")

# Save Content Metadata
metadata_filename = "content_metadata.csv"

with open(metadata_filename, "w", newline="") as file:
    writer = csv.writer(file)
    writer.writerow(["content_id", "title", "category", "length", "artist"])
    writer.writerows(content_metadata)

print("✅ Content metadata generated.")

